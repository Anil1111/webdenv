Array methods
	0.	.tostring()
	0.	.valueof()
	0.	.join(“ : “)
	0.	val = .pop()
	0.	.push(“mm”)
	0.	.shift()            // removes elem from beginning 
	0.	.unshift(“mm”)     // add to beginning 
	0.	.sort()
	0.	.reverse()
	0.	delete arr[0]      // removes first elem from arr
	0.	Newarr = arr1.concat(arr2)
	0.	.slice(start-index , end-index)     // [start, end)
	0.	.splice(insert-at-index, remove-at-index, “str1”, “str2”, “str3.”, .....)

Date 
	0.	var ndate = new Date();  
        0.       ndate.toDateString();
	0.	.getDate()
	0.	.getFullYear()
	0.	.getTime()

Number
	0.	if (number != parseInt(number))
	0.	isNaN (nchk)

Form
	0.	document . name-of-form . name-of-widget . value   // set or get value.
	0.	onsubmit=“return(validate())”.             // return false from func if error else true.

Functions
	0.	var f = function(a, b) { return a*b }.     // a nameless function stored in var
                f (45, 5).                                // call to function stored in var

	0.	Use of concept of nested functions.

Math
	0.	Math.abs()
	0.	Math.ceil()
	0.	     .floor()
	0.	     .pow()
	0.	     .sqrt()
	0.	     .random().    // no Param passed...generate between 0 and 1.
	0.	     .acos()
	0.	     .PI
	0.	     .log()

Alerts
        0.      var resp = prompt("Enter your name","naam"); // returns value entered, first arg is message, second arg is placeholder

	0.	alert(resp);                                 // a message alert

	0.	var cnfstat = confirm("Do you want to exit ?");  // confirmation alert
		if(cnfstat) alert("you said yes !");
		else alert("you said no !");
		
CSS
        0.      onclick = this.style.opacity="0.4";
	0.      onclick = this.style.left="+=250px";            // += , -=  specifies CSS properties from current values

Events
        0.      onclick, onfocus, onblur, onchange, onmouseover, onmouseout, onmousemove
	0.	oncontextmenu                   // right click event handler 
	0.	onClick = “func(this)”          // "this" provides a context object to element itself
	0.	onkeydown, onkeypress, onkeyup  // "event" provides a context object to event which triggered the function
                function keydown(e){                                           // first
			if(e.keyCode) console.log("keydown : " + e.keyCode)
		}

		function keypress(e){
			if(e.charCode) console.log("keypress charcode : " + e.charCode);  
			                                                      // second  
			                                                      // keypress works only for alphanumeric and not special keys
		}

		function keyup(e){                                            // third
			if(e.keyCode) console.log("keyup : " + e.keyCode)
		}

                <input type="text" name="dummy" onkeydown="keydown(event)" onkeypress="keypress(event)" onkeyup="keyup(event)">
		
        0.      stopPropagation()
	        <div onclick="func2()">DIV 2
	             <div onclick="func1(event)">DIV 1</div>            // Because DIV 1 is inside Div 2, both DIVs get clicked when you click on DIV 1.
	        </div>                                                  // stopPropagation() method prevents propagation of the same event from being called.
                                                                        // Propagation means bubbling up to parent elements or capturing down to child elements.
	       function func1(obj) { alert("DIV 1"); obj.stopPropagation(); }
	       
        0.     preventDefault()
	       $("a").click(function(event){
	          event.preventDefault();  });                           // preventDefault() method stops the default action of an element from happening.
		  
        0.     addEventListener()                                        // addEventListener() method attaches an event handler to the specified element.
	       document.getElementById("myBtn").addEventListener("mouseover", myFunction);
	       document.getElementById("myBtn").addEventListener("click", someOtherFunction);   // same/different event attached with same/different function
	       document.getElementById("myBtn").addEventListener("mouseout", OtherFunction);
	       document.getElementById("myBtn").addEventListener("click", function() { myFunction(p1, p2); });
	       document.getElementById("myDIV").removeEventListener("mousemove", myFunction);   // name of the event to remove,function to remove.
	       document.addEventListener("click", myFunction);          // attaches an event handler to the document , here myFunction gets called , anywhere user clicks on document.

        0.     setTimeout(func, duration)                                // calls 'func' only once after 'duration' millisec

        0.     var intervalVar = setInterval(func, duration)             // calls 'func' after every 'duration' millisec
        0.     clearInterval(intervalVar)                                // pass in name of variable defined during setInterval

￼
